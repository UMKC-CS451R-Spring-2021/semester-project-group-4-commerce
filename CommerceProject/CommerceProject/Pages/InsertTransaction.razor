@page "/insert"
@using Dapper
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using CommerceProject.Data
@using System.Data.SqlClient;
@using System.Data
@using CommerceProject.Models



@inject ITransactionData _db

<h1>Insert new transaction</h1>
<EditForm Model="@newTransaction" OnValidSubmit="@InsertTrans">
    <DataAnnotationsValidator />
    <Microsoft.AspNetCore.Components.Forms.ValidationSummary />         @*conflicting tags, specify which component to use*@

    <InputNumber id="Amount" @bind-Value="newTransaction.Amount" />

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>


    @*<table border="1">
        <tr>
            <td>Description</td>
            <td><input type="text" placeholder="Enter Description" @bind="ts.Account_Num" /></td>
        </tr>
        <tr>
            <td>Location</td>
            <td><input type="text" placeholder="Enter Processing Date" @bind="ts.Processing_Date" /></td>
        </tr>
        <tr>
            <td>Type</td>
            <td><input type="text" placeholder="Enter Type" @bind="ts.Type" /></td>
        </tr>
        <tr>
            <td>Amount</td>
            <td><input type="text" placeholder="Enter Amount" @bind="ts.Amount" /></td>
        </tr>
        <tr>
            <td>Description</td>
            <td><input type="text" placeholder="Enter Description" @bind="ts.Description" /></td>
        </tr>
        <tr>
            <td>Location</td>
            <td><input type="text" placeholder="Enter Location" @bind="ts.Location" /></td>
        </tr>
        <tr>
            <td></td>
            <td><input type="submit" value="Insert" /></td>
        </tr>

    </table>*@







@code
{
    private DisplayTransactionModel newTransaction = new DisplayTransactionModel();

    //private TransactionModel ts = new TransactionModel();

    //private void insertdata()
    //{
    //    _db.InsertTransaction(ts);

    //}

    private async Task InsertTrans()
    {
        TransactionModel t = new TransactionModel
        {
            Amount = newTransaction.Amount
        };

        await _db.InsertPerson(t);

        newTransaction = new DisplayTransactionModel();     // wipe out form model
    }

}
