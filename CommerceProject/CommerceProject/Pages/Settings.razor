@page "/settings"
@using DataAccessLibrary
@using DataAccessLibrary.Models
@using Microsoft.AspNetCore.Http
@using System.Text.RegularExpressions;

@inject IHttpContextAccessor httpContextAccessor
@inject IAccountHolderData _acc
@inject NavigationManager UriHelper
@inject INotificationListData _Notifications
@inject IToastService toastService


<style>
    body {
        background-image: url("/css/images/bgh.png"), url("/css/images/uprightcv.png");
        background-repeat: no-repeat;
        background-position: left bottom, right top;
        min-height: 500px;
        background-attachment: fixed;
    }
</style>


<div class="row gutters-sm mt-3">
    <div class="col-md-2 d-none d-md-block">
        <div class="card">
            <div class="card-body">
                <nav class="nav flex-column nav-pills nav-gap-y-1 green">
                    <a href="#profile" data-toggle="tab" class="nav-item nav-link has-icon nav-link-faded active">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user mr-2"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>Profile
                    </a>
                    <a href="#security" data-toggle="tab" class="nav-item nav-link has-icon nav-link-faded">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-shield mr-2"><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path></svg>Security
                    </a>
                    <a href="#notification" data-toggle="tab" class="nav-item nav-link has-icon nav-link-faded">
                        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-bell mr-2"><path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path></svg>Notifications
                    </a>
                </nav>
            </div>
        </div>
    </div>
    <div class="col-md-9">
        <div class="card">
            <div class="card-header border-bottom mb-3 d-flex d-md-none">
                <ul class="nav nav-tabs card-header-tabs nav-gap-x-1" role="tablist">
                    <li class="nav-item">
                        <a href="#profile" data-toggle="tab" class="nav-link has-icon active"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg></a>
                    </li>
                    <li class="nav-item">
                        <a href="#security" data-toggle="tab" class="nav-link has-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-shield"><path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path></svg></a>
                    </li>
                    <li class="nav-item">
                        <a href="#notification" data-toggle="tab" class="nav-link has-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-bell"><path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path></svg></a>
                    </li>
                </ul>
            </div>

            <div class="card-body tab-content">
                <div class="tab-pane active" id="profile">
                    <h6>PROFILE INFORMATION</h6>
                    <hr>
                    @if (current_profile is null)
                    {
                        <p><em>Loading...</em></p>
                    }
                    else
                    {
                    <form>
                        <div class="form-group">
                            <label for="firstName">First Name</label>
                            <input type="text" class="form-control" id="firstName" aria-describedby="firstNameHelp" placeholder="@getCurrentProfileInfo("firstName")" @bind-value=nametochange.first_Name>
                        </div>
                        <div class="form-group">
                            <label for="lastName">Last Name</label>
                            <input type="text" class="form-control" id="lastName" aria-describedby="lastNameHelp" placeholder="@getCurrentProfileInfo("lastName")" @bind-value=nametochange.last_Name>
                        </div>
                        <div class="form-group">
                            <label for="phoneNumber">Phone Number</label>
                            <input type="tel" mas pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" class="form-control" id="phoneNumber" aria-describedby="phoneNumberHelp" placeholder="@getCurrentProfileInfo("phone")" @bind-value=nametochange.phone_num>
                        </div>
                        <div class="form-group">
                            <label for="City">City</label>
                            <input type="text" class="form-control" id="City" placeholder="@getCurrentProfileInfo("city")" @bind-value=nametochange.city>
                        </div>
                        <div class="form-group">
                            <label for="State">State</label>
                            <input type="text" class="form-control" id="State" placeholder="@getCurrentProfileInfo("state")" @bind-value=nametochange.state>
                        </div>
                        <button type="button" class="btn btn-primary" @onclick="UpdateInfo">Update Personal Information</button>                                                 @*HERE*@
                    </form>
                    }
                </div>

                <div class="tab-pane" id="security">
                    <h6>SECURITY SETTINGS</h6>
                    <hr>
                    <form>
                        <button type="button" class="btn btn-primary" @onclick="toChangePassword">Change password</button>
                    </form>
                    <hr />
                </div>

                <div class="tab-pane" id="notification">
                    <h6>NOTIFICATION SETTINGS</h6>
                    <hr>
                    <div class="card-body">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input custom-control-input-green" id="customCheck2" checked="@lowBalanceIsOn" @bind-value="@lowBalanceIsOn">
                            <label class="custom-control-label" for="customCheck2">
                                <h6>ACCOUNT BALANCE</h6>
                            </label>
                            <div class="sans">
                                Notify me when a my account balance is below:
                                <div class="col-md-4">
                                    <NumericEdit TValue="decimal?" @bind-Value="@min_balance" Placeholder="@current_min_balance" Class="mt-2" />
                                </div>
                            </div>
                        </div>

                        <div class="custom-control custom-checkbox mt-5">
                            <input type="checkbox" class="custom-control-input custom-control-input-green" id="customCheck1" checked="@timeIsOn" @bind-value="@timeIsOn">
                            <label class="custom-control-label" for="customCheck1">
                                <h6>TIME NOTIFICATION</h6>
                            </label>
                            <div>
                                Notify me when a transaction is made between:
                                <div class="form-row mt-2 ml-2">
                                    <div class="col-md-4 form-group">
                                        <TimeEdit TValue="TimeSpan?" @bind-Time="@startTime" value="@current_start" />
                                    </div>
                                    <h3> - </h3>
                                    <div class="col-md-4 form-group">
                                        <TimeEdit TValue="TimeSpan?" @bind-Time="@endTime" value="@current_end" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="custom-control custom-checkbox mt-5">
                            <input type="checkbox" class="custom-control-input custom-control-input-green" id="customCheck3" checked="@withdrawalIsOn" @bind-value="@withdrawalIsOn">
                            <label class="custom-control-label" for="customCheck3">
                                <h6>TRANSACTION AMOUNT</h6>
                            </label>
                            <div>
                                Notify me when a transaction exceeds:
                                <div class="col-md-4 form-group">
                                    <NumericEdit TValue="decimal?" @bind-Value="@max_transaction" Placeholder="@current_max_transaction" Class="mt-2" />
                                </div>
                            </div>
                        </div>
                        <div class="custom-control custom-checkbox mt-5">
                            <input type="checkbox" checked="@emailNotIsOn" @bind-value="@emailNotIsOn" class="custom-control-input custom-control-input-green" id="customCheck4">
                            <label class="custom-control-label" for="customCheck4">Email me each time a notification is triggered</label>
                        </div>
                    </div>
                    <hr>
                    <button type="button" class="btn btn-primary" @onclick="updateNotificationSettings">Update Notifications</button>                               @*HERE*@
                </div>
            </div>
        </div>
    </div>
</div>

@code{

    AccountHolderModel nametochange = new AccountHolderModel();
    private string email;
    protected async Task UpdateInfo()
    {
        UserName = httpContextAccessor.HttpContext.User.Identity.Name; // gets current user's email
        current_profile = await _acc.getProfileInfo(UserName); // gets current user's profile info

        if (nametochange.first_Name == "") { nametochange.first_Name = current_profile[0].first_Name; };
        if (nametochange.last_Name == "") { nametochange.last_Name = current_profile[0].last_Name; };

        Regex rgx = new Regex(@"^(\+\d{ 1, 2 }\s)?\(?\d{ 3}\)?[\s.-]?\d{ 3}
        [\s.-]?\d{ 4}$");

        if (nametochange.phone_num == "" || nametochange.phone_num == null || (nametochange.phone_num != null && !(rgx.IsMatch(nametochange.phone_num)))) { nametochange.phone_num = current_profile[0].phone_num; }
        else { nametochange.phone_num = String.Format("{0: (###) ###-####}", Int64.Parse(nametochange.phone_num)); };

        if (nametochange.city == "") { nametochange.city = current_profile[0].city; };
        if (nametochange.state == "") { nametochange.state = current_profile[0].state; };

        toastService.ShowSuccess("Your Personal Information is now up to date", "Update Information");
        nametochange.email = httpContextAccessor.HttpContext.User.Identity.Name;


        await _acc.ChangeName(nametochange);

        await InvokeAsync(() =>
        {
            base.StateHasChanged();
        });
    }

    void toChangePassword()
    {
        UriHelper.NavigateTo("Identity/Account/ChangePassword", true);
    }

    bool withdrawalIsOn = false;
    bool lowBalanceIsOn = false;
    bool timeIsOn = false;
    bool emailNotIsOn = false;

    string current_min_balance = "25.00";
    string current_max_transaction = "500.00";
    string current_start = "02:00 AM";
    string current_end = "06:00 AM";

    public string UserName;
    private List<NotificationParamsModel> current_settings;
    private List<AccountHolderModel> current_profile;

    protected override async Task OnInitializedAsync()
    {
        UserName = httpContextAccessor.HttpContext.User.Identity.Name; // gets current user's email

        current_profile = await _acc.getProfileInfo(UserName); // gets current user's profile info

        current_settings = await _Notifications.GetNotificationSettings(UserName);

        current_min_balance = current_settings[0].Low_Balance_Threshold.ToString();
        current_max_transaction = current_settings[0].Withdrawal_Amount.ToString();
        current_start = current_settings[0].Begin_Time.ToString();
        current_end = current_settings[0].End_Time.ToString();

        withdrawalIsOn = current_settings[0].Large_Withdrawal_Is_On;
        lowBalanceIsOn = current_settings[0].Low_Balance_Is_On;
        timeIsOn = current_settings[0].Timeframe_Is_On;
        emailNotIsOn = current_settings[0].Send_Email;

        await InvokeAsync(() =>
        {
            base.StateHasChanged();
        });
    }


    decimal? min_balance;

    decimal? max_transaction;

    TimeSpan? startTime;
    TimeSpan? endTime;


    private async void updateNotificationSettings()
    {
        decimal min_bal = min_balance ?? 0.00m;
        decimal max_trans = max_transaction ?? 500.00m;
        TimeSpan start = startTime ?? TimeSpan.Parse("00:00:00");
        TimeSpan end = endTime ?? TimeSpan.Parse("04:00:00");

        toastService.ShowSuccess("Your Notification Preferences has been updated successfully", "Update Notifications");

        await _Notifications.SetParameters(UserName, timeIsOn, start.ToString(), end.ToString(), withdrawalIsOn,
                                           max_trans, lowBalanceIsOn, min_bal, emailNotIsOn);
    }

    private string getCurrentProfileInfo(string param)
    {
        string field = "";

        switch (param)
        {
            case "firstName":
                field = current_profile[0].first_Name ?? "Enter your first name";
                break;
            case "lastName":
                field = current_profile[0].last_Name ?? "Enter your last name";
                break;
            case "phone":
                field = current_profile[0].phone_num ?? "Enter your phone number";
                break;
            case "city":
                field = current_profile[0].city ?? "Enter your city";
                break;
            case "state":
                field = current_profile[0].state ?? "Enter your state";
                break;
            default:
                return field;
        }

        return field;
    }


}