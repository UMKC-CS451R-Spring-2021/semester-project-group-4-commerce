@page "/home"


@using CommerceProject.Data
@inject WeatherForecastService ForecastService
@inject GetTransactionData TransactionData

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}

<style>

    body {
        background-image: url("/css/images/bgh.png"), url("/css/images/uprightcv.png");
        background-repeat: no-repeat;
        background-position: left bottom, right top;
        min-height: 500px;
        background-attachment: fixed;
    }
    h2 {
        font-family: 'Poppins', sans-serif;
    }

    .table {
        font-family: 'Open Sans', sans-serif;
    }
    .collapse-row.collapsed + tr {
        display: none;
    }
    table {
        max-width: 100%;
    }

    .hiddenRow {
        padding: 0 !important;
    }

    .tableRowHover tbody tr:not(.tableRowHoverOff):hover td {
        background-color: #dcdcdc;
        transition: all 0.01s ease-in-out;
    }

    tr.noBorder td {
        border: 0;
    }

    .sticky-top {
        top: 1em;
    }
</style>

<div class="row">
    <div class="col-2"></div>
        <div class="col-sm-7">
            <div class="container mt-1 bg-light float-left" style="border:1px solid #cecece">
                <h2>
                    Transactions
                    <button type="button" class="btn bg-transparent float-right mr-2 mt-1">Settings <i class="fas fa-cog"></i> </button>
                    <button type="button" class="btn bg-transparent float-right mr-3 mt-1">Add Transaction <i class="fas fa-plus-circle"></i> </button>
                </h2>
                <div class="table-responsive-sm">
                    <table class="table tableRowHover bg-white" style="border-collapse:collapse;">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Location</th>
                                <th>Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var transaction in transaction_list)

                            {
                                <tr data-toggle="collapse" data-target=".@(transaction.getLocation())">
                                    <td>@transaction.getDate()</td>
                                    <td>@transaction.getLocation()</td>
                                    <td>@transaction.get_Amount()</td>
                                    
                                </tr>
                               

                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="container bg-light sticky-top" style="border:1px solid #cecece">
                <h2> Notifications mt-1</h2>
                <table class="table table-responsive bg-white" style="border:1px solid #cecece">
                    <thead>
                        <tr>
                            <th>Date</th>
                            <th>Temp. (C)</th>
                            <th>Temp. (F)</th>
                            <th>Summary</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var forecast in forecasts)
                        {
                            <tr>
                                <td>@forecast.Date.ToShortDateString()</td>
                                <td>@forecast.TemperatureC</td>
                                <td>@forecast.TemperatureF</td>
                                <td>@forecast.Summary</td>
                            </tr>
                        }

                    </tbody>
                </table>
            </div>
        </div>
    </div>


    @code {
        private WeatherForecast[] forecasts;
        List<Transaction> transaction_list = new List<Transaction>();

        protected override async Task OnInitializedAsync()
        {
            forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
            transaction_list = TransactionData.GetTransactions().ToList();
        }
    }
